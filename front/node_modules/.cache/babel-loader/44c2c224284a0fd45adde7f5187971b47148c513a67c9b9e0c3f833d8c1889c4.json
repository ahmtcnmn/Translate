{"ast":null,"code":"import axios from \"axios\";\nexport default function wordAdd() {\n  const wordAdd = async () => {\n    const update = [...words, {\n      id: words[words.length - 1].id + 1,\n      tr: addTr,\n      en: addEn\n    }];\n    try {\n      const response = await axios.post(\"http://localhost:3001/words\", {\n        id: Math.round(Math.random() * 999999),\n        tr: addTr,\n        en: addEn\n      });\n      setwords(update);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}","map":{"version":3,"names":["axios","wordAdd","update","words","id","length","tr","addTr","en","addEn","response","post","Math","round","random","setwords","console","log","error"],"sources":["/Users/ahmetcan/Desktop/Projeler/ing/front/src/function/WordsAdd.jsx"],"sourcesContent":["import axios from \"axios\";\n\nexport default function wordAdd() {\n  const wordAdd = async () => {\n    const update = [\n      ...words,\n      {\n        id: words[words.length - 1].id + 1,\n        tr: addTr,\n        en: addEn,\n      },\n    ];\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/words\", {\n        id: Math.round(Math.random() * 999999),\n        tr: addTr,\n        en: addEn,\n      });\n      setwords(update);\n      console.log(response);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,OAAOA,CAAA,EAAG;EAChC,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,MAAM,GAAG,CACb,GAAGC,KAAK,EACR;MACEC,EAAE,EAAED,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAACD,EAAE,GAAG,CAAC;MAClCE,EAAE,EAAEC,KAAK;MACTC,EAAE,EAAEC;IACN,CAAC,CACF;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,6BAA6B,EAAE;QAC/DP,EAAE,EAAEQ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC;QACtCR,EAAE,EAAEC,KAAK;QACTC,EAAE,EAAEC;MACN,CAAC,CAAC;MACFM,QAAQ,CAACb,MAAM,CAAC;MAChBc,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}